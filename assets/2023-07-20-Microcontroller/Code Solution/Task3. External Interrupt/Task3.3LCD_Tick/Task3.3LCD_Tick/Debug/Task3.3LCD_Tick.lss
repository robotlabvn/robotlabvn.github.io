
Task3.3LCD_Tick.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800200  00000954  000009e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000954  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800210  00800210  000009f8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009f8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a28  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013bf  00000000  00000000  00000b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e65  00000000  00000000  00001ee7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000085c  00000000  00000000  00002d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  000035a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006aa  00000000  00000000  00003768  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e8  00000000  00000000  00003e12  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000043fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	ee c0       	rjmp	.+476    	; 0x1de <__ctors_end>
   2:	00 00       	nop
   4:	de c1       	rjmp	.+956    	; 0x3c2 <__vector_1>
   6:	00 00       	nop
   8:	ed c1       	rjmp	.+986    	; 0x3e4 <__vector_2>
   a:	00 00       	nop
   c:	07 c1       	rjmp	.+526    	; 0x21c <__bad_interrupt>
   e:	00 00       	nop
  10:	05 c1       	rjmp	.+522    	; 0x21c <__bad_interrupt>
  12:	00 00       	nop
  14:	03 c1       	rjmp	.+518    	; 0x21c <__bad_interrupt>
  16:	00 00       	nop
  18:	01 c1       	rjmp	.+514    	; 0x21c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	ff c0       	rjmp	.+510    	; 0x21c <__bad_interrupt>
  1e:	00 00       	nop
  20:	fd c0       	rjmp	.+506    	; 0x21c <__bad_interrupt>
  22:	00 00       	nop
  24:	fb c0       	rjmp	.+502    	; 0x21c <__bad_interrupt>
  26:	00 00       	nop
  28:	f9 c0       	rjmp	.+498    	; 0x21c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	f7 c0       	rjmp	.+494    	; 0x21c <__bad_interrupt>
  2e:	00 00       	nop
  30:	f5 c0       	rjmp	.+490    	; 0x21c <__bad_interrupt>
  32:	00 00       	nop
  34:	f3 c0       	rjmp	.+486    	; 0x21c <__bad_interrupt>
  36:	00 00       	nop
  38:	f1 c0       	rjmp	.+482    	; 0x21c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	ef c0       	rjmp	.+478    	; 0x21c <__bad_interrupt>
  3e:	00 00       	nop
  40:	ed c0       	rjmp	.+474    	; 0x21c <__bad_interrupt>
  42:	00 00       	nop
  44:	eb c0       	rjmp	.+470    	; 0x21c <__bad_interrupt>
  46:	00 00       	nop
  48:	e9 c0       	rjmp	.+466    	; 0x21c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	e7 c0       	rjmp	.+462    	; 0x21c <__bad_interrupt>
  4e:	00 00       	nop
  50:	e5 c0       	rjmp	.+458    	; 0x21c <__bad_interrupt>
  52:	00 00       	nop
  54:	e3 c0       	rjmp	.+454    	; 0x21c <__bad_interrupt>
  56:	00 00       	nop
  58:	e1 c0       	rjmp	.+450    	; 0x21c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	df c0       	rjmp	.+446    	; 0x21c <__bad_interrupt>
  5e:	00 00       	nop
  60:	dd c0       	rjmp	.+442    	; 0x21c <__bad_interrupt>
  62:	00 00       	nop
  64:	db c0       	rjmp	.+438    	; 0x21c <__bad_interrupt>
  66:	00 00       	nop
  68:	d9 c0       	rjmp	.+434    	; 0x21c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	d7 c0       	rjmp	.+430    	; 0x21c <__bad_interrupt>
  6e:	00 00       	nop
  70:	d5 c0       	rjmp	.+426    	; 0x21c <__bad_interrupt>
  72:	00 00       	nop
  74:	d3 c0       	rjmp	.+422    	; 0x21c <__bad_interrupt>
  76:	00 00       	nop
  78:	d1 c0       	rjmp	.+418    	; 0x21c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	cf c0       	rjmp	.+414    	; 0x21c <__bad_interrupt>
  7e:	00 00       	nop
  80:	cd c0       	rjmp	.+410    	; 0x21c <__bad_interrupt>
  82:	00 00       	nop
  84:	cb c0       	rjmp	.+406    	; 0x21c <__bad_interrupt>
  86:	00 00       	nop
  88:	c9 c0       	rjmp	.+402    	; 0x21c <__bad_interrupt>
  8a:	00 00       	nop
  8c:	c7 c0       	rjmp	.+398    	; 0x21c <__bad_interrupt>
  8e:	00 00       	nop
  90:	c5 c0       	rjmp	.+394    	; 0x21c <__bad_interrupt>
  92:	00 00       	nop
  94:	c3 c0       	rjmp	.+390    	; 0x21c <__bad_interrupt>
  96:	00 00       	nop
  98:	c1 c0       	rjmp	.+386    	; 0x21c <__bad_interrupt>
  9a:	00 00       	nop
  9c:	bf c0       	rjmp	.+382    	; 0x21c <__bad_interrupt>
  9e:	00 00       	nop
  a0:	bd c0       	rjmp	.+378    	; 0x21c <__bad_interrupt>
  a2:	00 00       	nop
  a4:	bb c0       	rjmp	.+374    	; 0x21c <__bad_interrupt>
  a6:	00 00       	nop
  a8:	b9 c0       	rjmp	.+370    	; 0x21c <__bad_interrupt>
  aa:	00 00       	nop
  ac:	b7 c0       	rjmp	.+366    	; 0x21c <__bad_interrupt>
  ae:	00 00       	nop
  b0:	b5 c0       	rjmp	.+362    	; 0x21c <__bad_interrupt>
  b2:	00 00       	nop
  b4:	b3 c0       	rjmp	.+358    	; 0x21c <__bad_interrupt>
  b6:	00 00       	nop
  b8:	b1 c0       	rjmp	.+354    	; 0x21c <__bad_interrupt>
  ba:	00 00       	nop
  bc:	af c0       	rjmp	.+350    	; 0x21c <__bad_interrupt>
  be:	00 00       	nop
  c0:	ad c0       	rjmp	.+346    	; 0x21c <__bad_interrupt>
  c2:	00 00       	nop
  c4:	ab c0       	rjmp	.+342    	; 0x21c <__bad_interrupt>
  c6:	00 00       	nop
  c8:	a9 c0       	rjmp	.+338    	; 0x21c <__bad_interrupt>
  ca:	00 00       	nop
  cc:	a7 c0       	rjmp	.+334    	; 0x21c <__bad_interrupt>
  ce:	00 00       	nop
  d0:	a5 c0       	rjmp	.+330    	; 0x21c <__bad_interrupt>
  d2:	00 00       	nop
  d4:	a3 c0       	rjmp	.+326    	; 0x21c <__bad_interrupt>
  d6:	00 00       	nop
  d8:	a1 c0       	rjmp	.+322    	; 0x21c <__bad_interrupt>
  da:	00 00       	nop
  dc:	9f c0       	rjmp	.+318    	; 0x21c <__bad_interrupt>
  de:	00 00       	nop
  e0:	9d c0       	rjmp	.+314    	; 0x21c <__bad_interrupt>
	...

000000e4 <__trampolines_end>:
  e4:	00 40       	sbci	r16, 0x00	; 0
  e6:	7a 10       	cpse	r7, r10
  e8:	f3 5a       	subi	r31, 0xA3	; 163
  ea:	00 a0       	ldd	r0, Z+32	; 0x20
  ec:	72 4e       	sbci	r23, 0xE2	; 226
  ee:	18 09       	sbc	r17, r8
  f0:	00 10       	cpse	r0, r0
  f2:	a5 d4       	rcall	.+2378   	; 0xa3e <__data_load_end+0xda>
  f4:	e8 00       	.word	0x00e8	; ????
  f6:	00 e8       	ldi	r16, 0x80	; 128
  f8:	76 48       	sbci	r23, 0x86	; 134
  fa:	17 00       	.word	0x0017	; ????
  fc:	00 e4       	ldi	r16, 0x40	; 64
  fe:	0b 54       	subi	r16, 0x4B	; 75
 100:	02 00       	.word	0x0002	; ????
 102:	00 ca       	rjmp	.-3072   	; 0xfffff504 <__eeprom_end+0xff7ef504>
 104:	9a 3b       	cpi	r25, 0xBA	; 186
 106:	00 00       	nop
 108:	00 e1       	ldi	r16, 0x10	; 16
 10a:	f5 05       	cpc	r31, r5
 10c:	00 00       	nop
 10e:	80 96       	adiw	r24, 0x20	; 32
 110:	98 00       	.word	0x0098	; ????
 112:	00 00       	nop
 114:	40 42       	sbci	r20, 0x20	; 32
 116:	0f 00       	.word	0x000f	; ????
 118:	00 00       	nop
 11a:	a0 86       	std	Z+8, r10	; 0x08
 11c:	01 00       	.word	0x0001	; ????
 11e:	00 00       	nop
 120:	10 27       	eor	r17, r16
 122:	00 00       	nop
 124:	00 00       	nop
 126:	e8 03       	fmulsu	r22, r16
 128:	00 00       	nop
 12a:	00 00       	nop
 12c:	64 00       	.word	0x0064	; ????
 12e:	00 00       	nop
 130:	00 00       	nop
 132:	0a 00       	.word	0x000a	; ????
 134:	00 00       	nop
 136:	00 00       	nop
 138:	01 00       	.word	0x0001	; ????
 13a:	00 00       	nop
 13c:	00 00       	nop
 13e:	2c 76       	andi	r18, 0x6C	; 108
 140:	d8 88       	ldd	r13, Y+16	; 0x10
 142:	dc 67       	ori	r29, 0x7C	; 124
 144:	4f 08       	sbc	r4, r15
 146:	23 df       	rcall	.-442    	; 0xffffff8e <__eeprom_end+0xff7eff8e>
 148:	c1 df       	rcall	.-126    	; 0xcc <__SREG__+0x8d>
 14a:	ae 59       	subi	r26, 0x9E	; 158
 14c:	e1 b1       	in	r30, 0x01	; 1
 14e:	b7 96       	adiw	r30, 0x27	; 39
 150:	e5 e3       	ldi	r30, 0x35	; 53
 152:	e4 53       	subi	r30, 0x34	; 52
 154:	c6 3a       	cpi	r28, 0xA6	; 166
 156:	e6 51       	subi	r30, 0x16	; 22
 158:	99 76       	andi	r25, 0x69	; 105
 15a:	96 e8       	ldi	r25, 0x86	; 134
 15c:	e6 c2       	rjmp	.+1484   	; 0x72a <dtoa_prf+0x276>
 15e:	84 26       	eor	r8, r20
 160:	eb 89       	ldd	r30, Y+19	; 0x13
 162:	8c 9b       	sbis	0x11, 4	; 17
 164:	62 ed       	ldi	r22, 0xD2	; 210
 166:	40 7c       	andi	r20, 0xC0	; 192
 168:	6f fc       	.word	0xfc6f	; ????
 16a:	ef bc       	out	0x2f, r14	; 47
 16c:	9c 9f       	mul	r25, r28
 16e:	40 f2       	brcs	.-112    	; 0x100 <__trampolines_end+0x1c>
 170:	ba a5       	ldd	r27, Y+42	; 0x2a
 172:	6f a5       	ldd	r22, Y+47	; 0x2f
 174:	f4 90       	lpm	r15, Z
 176:	05 5a       	subi	r16, 0xA5	; 165
 178:	2a f7       	brpl	.-54     	; 0x144 <__trampolines_end+0x60>
 17a:	5c 93       	st	X, r21
 17c:	6b 6c       	ori	r22, 0xCB	; 203
 17e:	f9 67       	ori	r31, 0x79	; 121
 180:	6d c1       	rjmp	.+730    	; 0x45c <program1+0x56>
 182:	1b fc       	.word	0xfc1b	; ????
 184:	e0 e4       	ldi	r30, 0x40	; 64
 186:	0d 47       	sbci	r16, 0x7D	; 125
 188:	fe f5       	brtc	.+126    	; 0x208 <__do_clear_bss>
 18a:	20 e6       	ldi	r18, 0x60	; 96
 18c:	b5 00       	.word	0x00b5	; ????
 18e:	d0 ed       	ldi	r29, 0xD0	; 208
 190:	90 2e       	mov	r9, r16
 192:	03 00       	.word	0x0003	; ????
 194:	94 35       	cpi	r25, 0x54	; 84
 196:	77 05       	cpc	r23, r7
 198:	00 80       	ld	r0, Z
 19a:	84 1e       	adc	r8, r20
 19c:	08 00       	.word	0x0008	; ????
 19e:	00 20       	and	r0, r0
 1a0:	4e 0a       	sbc	r4, r30
 1a2:	00 00       	nop
 1a4:	00 c8       	rjmp	.-4096   	; 0xfffff1a6 <__eeprom_end+0xff7ef1a6>
 1a6:	0c 33       	cpi	r16, 0x3C	; 60
 1a8:	33 33       	cpi	r19, 0x33	; 51
 1aa:	33 0f       	add	r19, r19
 1ac:	98 6e       	ori	r25, 0xE8	; 232
 1ae:	12 83       	std	Z+2, r17	; 0x02
 1b0:	11 41       	sbci	r17, 0x11	; 17
 1b2:	ef 8d       	ldd	r30, Y+31	; 0x1f
 1b4:	21 14       	cp	r2, r1
 1b6:	89 3b       	cpi	r24, 0xB9	; 185
 1b8:	e6 55       	subi	r30, 0x56	; 86
 1ba:	16 cf       	rjmp	.-468    	; 0xffffffe8 <__eeprom_end+0xff7effe8>
 1bc:	fe e6       	ldi	r31, 0x6E	; 110
 1be:	db 18       	sub	r13, r11
 1c0:	d1 84       	ldd	r13, Z+9	; 0x09
 1c2:	4b 38       	cpi	r20, 0x8B	; 139
 1c4:	1b f7       	brvc	.-58     	; 0x18c <__trampolines_end+0xa8>
 1c6:	7c 1d       	adc	r23, r12
 1c8:	90 1d       	adc	r25, r0
 1ca:	a4 bb       	out	0x14, r26	; 20
 1cc:	e4 24       	eor	r14, r4
 1ce:	20 32       	cpi	r18, 0x20	; 32
 1d0:	84 72       	andi	r24, 0x24	; 36
 1d2:	5e 22       	and	r5, r30
 1d4:	81 00       	.word	0x0081	; ????
 1d6:	c9 f1       	breq	.+114    	; 0x24a <lcd_write+0x24>
 1d8:	24 ec       	ldi	r18, 0xC4	; 196
 1da:	a1 e5       	ldi	r26, 0x51	; 81
 1dc:	3d 27       	eor	r19, r29

000001de <__ctors_end>:
 1de:	11 24       	eor	r1, r1
 1e0:	1f be       	out	0x3f, r1	; 63
 1e2:	cf ef       	ldi	r28, 0xFF	; 255
 1e4:	d1 e2       	ldi	r29, 0x21	; 33
 1e6:	de bf       	out	0x3e, r29	; 62
 1e8:	cd bf       	out	0x3d, r28	; 61
 1ea:	00 e0       	ldi	r16, 0x00	; 0
 1ec:	0c bf       	out	0x3c, r16	; 60

000001ee <__do_copy_data>:
 1ee:	12 e0       	ldi	r17, 0x02	; 2
 1f0:	a0 e0       	ldi	r26, 0x00	; 0
 1f2:	b2 e0       	ldi	r27, 0x02	; 2
 1f4:	e4 e5       	ldi	r30, 0x54	; 84
 1f6:	f9 e0       	ldi	r31, 0x09	; 9
 1f8:	00 e0       	ldi	r16, 0x00	; 0
 1fa:	0b bf       	out	0x3b, r16	; 59
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <__do_copy_data+0x14>
 1fe:	07 90       	elpm	r0, Z+
 200:	0d 92       	st	X+, r0
 202:	a0 31       	cpi	r26, 0x10	; 16
 204:	b1 07       	cpc	r27, r17
 206:	d9 f7       	brne	.-10     	; 0x1fe <__do_copy_data+0x10>

00000208 <__do_clear_bss>:
 208:	22 e0       	ldi	r18, 0x02	; 2
 20a:	a0 e1       	ldi	r26, 0x10	; 16
 20c:	b2 e0       	ldi	r27, 0x02	; 2
 20e:	01 c0       	rjmp	.+2      	; 0x212 <.do_clear_bss_start>

00000210 <.do_clear_bss_loop>:
 210:	1d 92       	st	X+, r1

00000212 <.do_clear_bss_start>:
 212:	a1 31       	cpi	r26, 0x11	; 17
 214:	b2 07       	cpc	r27, r18
 216:	e1 f7       	brne	.-8      	; 0x210 <.do_clear_bss_loop>
 218:	24 d1       	rcall	.+584    	; 0x462 <main>
 21a:	9a c3       	rjmp	.+1844   	; 0x950 <_exit>

0000021c <__bad_interrupt>:
 21c:	f1 ce       	rjmp	.-542    	; 0x0 <__vectors>

0000021e <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) ) {
        lcd_putc(c);
    }

}/* lcd_puts_p */
 21e:	15 9a       	sbi	0x02, 5	; 2
 220:	00 c0       	rjmp	.+0      	; 0x222 <toggle_e+0x4>
 222:	15 98       	cbi	0x02, 5	; 2
 224:	08 95       	ret

00000226 <lcd_write>:
 226:	cf 93       	push	r28
 228:	c8 2f       	mov	r28, r24
 22a:	66 23       	and	r22, r22
 22c:	11 f0       	breq	.+4      	; 0x232 <lcd_write+0xc>
 22e:	17 9a       	sbi	0x02, 7	; 2
 230:	01 c0       	rjmp	.+2      	; 0x234 <lcd_write+0xe>
 232:	17 98       	cbi	0x02, 7	; 2
 234:	16 98       	cbi	0x02, 6	; 2
 236:	0c 9a       	sbi	0x01, 4	; 1
 238:	0b 9a       	sbi	0x01, 3	; 1
 23a:	0a 9a       	sbi	0x01, 2	; 1
 23c:	09 9a       	sbi	0x01, 1	; 1
 23e:	11 98       	cbi	0x02, 1	; 2
 240:	12 98       	cbi	0x02, 2	; 2
 242:	13 98       	cbi	0x02, 3	; 2
 244:	14 98       	cbi	0x02, 4	; 2
 246:	cc 23       	and	r28, r28
 248:	0c f4       	brge	.+2      	; 0x24c <lcd_write+0x26>
 24a:	11 9a       	sbi	0x02, 1	; 2
 24c:	c6 fd       	sbrc	r28, 6
 24e:	12 9a       	sbi	0x02, 2	; 2
 250:	c5 fd       	sbrc	r28, 5
 252:	13 9a       	sbi	0x02, 3	; 2
 254:	c4 fd       	sbrc	r28, 4
 256:	14 9a       	sbi	0x02, 4	; 2
 258:	e2 df       	rcall	.-60     	; 0x21e <toggle_e>
 25a:	11 98       	cbi	0x02, 1	; 2
 25c:	12 98       	cbi	0x02, 2	; 2
 25e:	13 98       	cbi	0x02, 3	; 2
 260:	14 98       	cbi	0x02, 4	; 2
 262:	c3 fd       	sbrc	r28, 3
 264:	11 9a       	sbi	0x02, 1	; 2
 266:	c2 fd       	sbrc	r28, 2
 268:	12 9a       	sbi	0x02, 2	; 2
 26a:	c1 fd       	sbrc	r28, 1
 26c:	13 9a       	sbi	0x02, 3	; 2
 26e:	c0 fd       	sbrc	r28, 0
 270:	14 9a       	sbi	0x02, 4	; 2
 272:	d5 df       	rcall	.-86     	; 0x21e <toggle_e>
 274:	14 9a       	sbi	0x02, 4	; 2
 276:	13 9a       	sbi	0x02, 3	; 2
 278:	12 9a       	sbi	0x02, 2	; 2
 27a:	11 9a       	sbi	0x02, 1	; 2
 27c:	cf 91       	pop	r28
 27e:	08 95       	ret

00000280 <lcd_read>:
 280:	88 23       	and	r24, r24
 282:	11 f0       	breq	.+4      	; 0x288 <lcd_read+0x8>
 284:	17 9a       	sbi	0x02, 7	; 2
 286:	01 c0       	rjmp	.+2      	; 0x28a <lcd_read+0xa>
 288:	17 98       	cbi	0x02, 7	; 2
 28a:	16 9a       	sbi	0x02, 6	; 2
 28c:	0c 98       	cbi	0x01, 4	; 1
 28e:	0b 98       	cbi	0x01, 3	; 1
 290:	0a 98       	cbi	0x01, 2	; 1
 292:	09 98       	cbi	0x01, 1	; 1
 294:	15 9a       	sbi	0x02, 5	; 2
 296:	00 c0       	rjmp	.+0      	; 0x298 <lcd_read+0x18>
 298:	04 9b       	sbis	0x00, 4	; 0
 29a:	02 c0       	rjmp	.+4      	; 0x2a0 <lcd_read+0x20>
 29c:	80 e1       	ldi	r24, 0x10	; 16
 29e:	01 c0       	rjmp	.+2      	; 0x2a2 <lcd_read+0x22>
 2a0:	80 e0       	ldi	r24, 0x00	; 0
 2a2:	03 99       	sbic	0x00, 3	; 0
 2a4:	80 62       	ori	r24, 0x20	; 32
 2a6:	02 99       	sbic	0x00, 2	; 0
 2a8:	80 64       	ori	r24, 0x40	; 64
 2aa:	01 99       	sbic	0x00, 1	; 0
 2ac:	80 68       	ori	r24, 0x80	; 128
 2ae:	15 98       	cbi	0x02, 5	; 2
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <lcd_read+0x32>
 2b2:	15 9a       	sbi	0x02, 5	; 2
 2b4:	00 c0       	rjmp	.+0      	; 0x2b6 <lcd_read+0x36>
 2b6:	04 99       	sbic	0x00, 4	; 0
 2b8:	81 60       	ori	r24, 0x01	; 1
 2ba:	03 99       	sbic	0x00, 3	; 0
 2bc:	82 60       	ori	r24, 0x02	; 2
 2be:	02 99       	sbic	0x00, 2	; 0
 2c0:	84 60       	ori	r24, 0x04	; 4
 2c2:	01 99       	sbic	0x00, 1	; 0
 2c4:	88 60       	ori	r24, 0x08	; 8
 2c6:	15 98       	cbi	0x02, 5	; 2
 2c8:	08 95       	ret

000002ca <lcd_waitbusy>:
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	d9 df       	rcall	.-78     	; 0x280 <lcd_read>
 2ce:	88 23       	and	r24, r24
 2d0:	e4 f3       	brlt	.-8      	; 0x2ca <lcd_waitbusy>
 2d2:	84 e0       	ldi	r24, 0x04	; 4
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	01 97       	sbiw	r24, 0x01	; 1
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <lcd_waitbusy+0xc>
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	d1 cf       	rjmp	.-94     	; 0x280 <lcd_read>
 2de:	08 95       	ret

000002e0 <lcd_command>:
 2e0:	cf 93       	push	r28
 2e2:	c8 2f       	mov	r28, r24
 2e4:	f2 df       	rcall	.-28     	; 0x2ca <lcd_waitbusy>
 2e6:	60 e0       	ldi	r22, 0x00	; 0
 2e8:	8c 2f       	mov	r24, r28
 2ea:	9d df       	rcall	.-198    	; 0x226 <lcd_write>
 2ec:	cf 91       	pop	r28
 2ee:	08 95       	ret

000002f0 <lcd_gotoxy>:
 2f0:	61 11       	cpse	r22, r1
 2f2:	03 c0       	rjmp	.+6      	; 0x2fa <lcd_gotoxy+0xa>
 2f4:	80 58       	subi	r24, 0x80	; 128
 2f6:	f4 cf       	rjmp	.-24     	; 0x2e0 <lcd_command>
 2f8:	08 95       	ret
 2fa:	80 54       	subi	r24, 0x40	; 64
 2fc:	f1 cf       	rjmp	.-30     	; 0x2e0 <lcd_command>
 2fe:	08 95       	ret

00000300 <lcd_clrscr>:
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	ee cf       	rjmp	.-36     	; 0x2e0 <lcd_command>
 304:	08 95       	ret

00000306 <lcd_putc>:
 306:	cf 93       	push	r28
 308:	c8 2f       	mov	r28, r24
 30a:	df df       	rcall	.-66     	; 0x2ca <lcd_waitbusy>
 30c:	ca 30       	cpi	r28, 0x0A	; 10
 30e:	41 f4       	brne	.+16     	; 0x320 <lcd_putc+0x1a>
 310:	80 34       	cpi	r24, 0x40	; 64
 312:	10 f0       	brcs	.+4      	; 0x318 <lcd_putc+0x12>
 314:	80 e0       	ldi	r24, 0x00	; 0
 316:	01 c0       	rjmp	.+2      	; 0x31a <lcd_putc+0x14>
 318:	80 e4       	ldi	r24, 0x40	; 64
 31a:	80 58       	subi	r24, 0x80	; 128
 31c:	e1 df       	rcall	.-62     	; 0x2e0 <lcd_command>
 31e:	0f c0       	rjmp	.+30     	; 0x33e <lcd_putc+0x38>
 320:	80 31       	cpi	r24, 0x10	; 16
 322:	21 f4       	brne	.+8      	; 0x32c <lcd_putc+0x26>
 324:	60 e0       	ldi	r22, 0x00	; 0
 326:	80 ec       	ldi	r24, 0xC0	; 192
 328:	7e df       	rcall	.-260    	; 0x226 <lcd_write>
 32a:	05 c0       	rjmp	.+10     	; 0x336 <lcd_putc+0x30>
 32c:	80 35       	cpi	r24, 0x50	; 80
 32e:	19 f4       	brne	.+6      	; 0x336 <lcd_putc+0x30>
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	80 e8       	ldi	r24, 0x80	; 128
 334:	78 df       	rcall	.-272    	; 0x226 <lcd_write>
 336:	c9 df       	rcall	.-110    	; 0x2ca <lcd_waitbusy>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	8c 2f       	mov	r24, r28
 33c:	74 df       	rcall	.-280    	; 0x226 <lcd_write>
 33e:	cf 91       	pop	r28
 340:	08 95       	ret

00000342 <lcd_puts>:
 342:	cf 93       	push	r28
 344:	df 93       	push	r29
 346:	ec 01       	movw	r28, r24
 348:	21 96       	adiw	r28, 0x01	; 1
 34a:	fc 01       	movw	r30, r24
 34c:	80 81       	ld	r24, Z
 34e:	88 23       	and	r24, r24
 350:	21 f0       	breq	.+8      	; 0x35a <lcd_puts+0x18>
 352:	d9 df       	rcall	.-78     	; 0x306 <lcd_putc>
 354:	89 91       	ld	r24, Y+
 356:	81 11       	cpse	r24, r1
 358:	fc cf       	rjmp	.-8      	; 0x352 <lcd_puts+0x10>
 35a:	df 91       	pop	r29
 35c:	cf 91       	pop	r28
 35e:	08 95       	ret

00000360 <lcd_init>:
                   LCD_DISP_ON_CURSOR      display on, cursor on
                   LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
 360:	1f 93       	push	r17
 362:	cf 93       	push	r28
 364:	df 93       	push	r29
 366:	18 2f       	mov	r17, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
 368:	0f 9a       	sbi	0x01, 7	; 1
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
 36a:	0e 9a       	sbi	0x01, 6	; 1
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
 36c:	0d 9a       	sbi	0x01, 5	; 1
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
 36e:	0c 9a       	sbi	0x01, 4	; 1
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
 370:	0b 9a       	sbi	0x01, 3	; 1
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
 372:	0a 9a       	sbi	0x01, 2	; 1
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
 374:	09 9a       	sbi	0x01, 1	; 1
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 376:	80 e0       	ldi	r24, 0x00	; 0
 378:	9d e7       	ldi	r25, 0x7D	; 125
 37a:	01 97       	sbiw	r24, 0x01	; 1
 37c:	f1 f7       	brne	.-4      	; 0x37a <lcd_init+0x1a>
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
    }
    delay(16000);        /* wait 16ms or more after power-on       */
    
    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);  // _BV(LCD_FUNCTION)>>4;
 37e:	13 9a       	sbi	0x02, 3	; 2
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
 380:	14 9a       	sbi	0x02, 4	; 2
    lcd_e_toggle();
 382:	4d df       	rcall	.-358    	; 0x21e <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	97 e2       	ldi	r25, 0x27	; 39
 388:	01 97       	sbiw	r24, 0x01	; 1
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);  // _BV(LCD_FUNCTION_8BIT)>>4;
    lcd_e_toggle();
    delay(4992);         /* delay, busy flag can't be checked here */
   
    /* repeat last command */ 
    lcd_e_toggle();      
 38a:	f1 f7       	brne	.-4      	; 0x388 <lcd_init+0x28>
 38c:	48 df       	rcall	.-368    	; 0x21e <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 38e:	c0 e8       	ldi	r28, 0x80	; 128
 390:	d0 e0       	ldi	r29, 0x00	; 0
 392:	ce 01       	movw	r24, r28
 394:	01 97       	sbiw	r24, 0x01	; 1
    /* repeat last command */ 
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */
    
    /* repeat last command a third time */
    lcd_e_toggle();      
 396:	f1 f7       	brne	.-4      	; 0x394 <lcd_init+0x34>
 398:	42 df       	rcall	.-380    	; 0x21e <toggle_e>
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 39a:	ce 01       	movw	r24, r28
 39c:	01 97       	sbiw	r24, 0x01	; 1
    /* repeat last command a third time */
    lcd_e_toggle();      
    delay(64);           /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);   // LCD_FUNCTION_4BIT_1LINE>>4
 39e:	f1 f7       	brne	.-4      	; 0x39c <lcd_init+0x3c>
    lcd_e_toggle();
 3a0:	14 98       	cbi	0x02, 4	; 2
static inline void _delayFourCycles(unsigned int __count)
{
    if ( __count == 0 )    
        __asm__ __volatile__( "rjmp 1f\n 1:" );    // 2 cycles
    else
        __asm__ __volatile__ (
 3a2:	3d df       	rcall	.-390    	; 0x21e <toggle_e>
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
	lcd_command(KS0073_4LINES_MODE);
	lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
#else
    lcd_command(LCD_FUNCTION_DEFAULT);      /* function set: display lines  */
 3a4:	21 97       	sbiw	r28, 0x01	; 1
 3a6:	f1 f7       	brne	.-4      	; 0x3a4 <lcd_init+0x44>
#endif
    lcd_command(LCD_DISP_OFF);              /* display off                  */
 3a8:	88 e2       	ldi	r24, 0x28	; 40
 3aa:	9a df       	rcall	.-204    	; 0x2e0 <lcd_command>
    lcd_clrscr();                           /* display clear                */ 
 3ac:	88 e0       	ldi	r24, 0x08	; 8
 3ae:	98 df       	rcall	.-208    	; 0x2e0 <lcd_command>
    lcd_command(LCD_MODE_DEFAULT);          /* set entry mode               */
 3b0:	a7 df       	rcall	.-178    	; 0x300 <lcd_clrscr>
 3b2:	86 e0       	ldi	r24, 0x06	; 6
 3b4:	95 df       	rcall	.-214    	; 0x2e0 <lcd_command>
    lcd_command(dispAttr);                  /* display/cursor control       */
 3b6:	81 2f       	mov	r24, r17
 3b8:	93 df       	rcall	.-218    	; 0x2e0 <lcd_command>
 3ba:	df 91       	pop	r29

}/* lcd_init */
 3bc:	cf 91       	pop	r28
 3be:	1f 91       	pop	r17
 3c0:	08 95       	ret

000003c2 <__vector_1>:
	PORT B = LED
	PORT D = SWITCHER (PD0? increment and PD1 ? Decrement)
	*************************/

ISR (INT0_vect) //The ISR() function is a general interrupt service routine
{
 3c2:	1f 92       	push	r1
 3c4:	0f 92       	push	r0
 3c6:	0f b6       	in	r0, 0x3f	; 63
 3c8:	0f 92       	push	r0
 3ca:	11 24       	eor	r1, r1
 3cc:	8f 93       	push	r24
	counter ++;
 3ce:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <__data_end>
 3d2:	8f 5f       	subi	r24, 0xFF	; 255
 3d4:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <__data_end>
}
 3d8:	8f 91       	pop	r24
 3da:	0f 90       	pop	r0
 3dc:	0f be       	out	0x3f, r0	; 63
 3de:	0f 90       	pop	r0
 3e0:	1f 90       	pop	r1
 3e2:	18 95       	reti

000003e4 <__vector_2>:

ISR (INT1_vect)
{
 3e4:	1f 92       	push	r1
 3e6:	0f 92       	push	r0
 3e8:	0f b6       	in	r0, 0x3f	; 63
 3ea:	0f 92       	push	r0
 3ec:	11 24       	eor	r1, r1
 3ee:	8f 93       	push	r24
	counter --;
 3f0:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <__data_end>
 3f4:	81 50       	subi	r24, 0x01	; 1
 3f6:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <__data_end>
}
 3fa:	8f 91       	pop	r24
 3fc:	0f 90       	pop	r0
 3fe:	0f be       	out	0x3f, r0	; 63
 400:	0f 90       	pop	r0
 402:	1f 90       	pop	r1
 404:	18 95       	reti

00000406 <program1>:
		program1();
    }
}

void program1(void)
{
 406:	cf 93       	push	r28
 408:	df 93       	push	r29
 40a:	cd b7       	in	r28, 0x3d	; 61
 40c:	de b7       	in	r29, 0x3e	; 62
 40e:	64 97       	sbiw	r28, 0x14	; 20
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	f8 94       	cli
 414:	de bf       	out	0x3e, r29	; 62
 416:	0f be       	out	0x3f, r0	; 63
 418:	cd bf       	out	0x3d, r28	; 61
	char Output[20];
	lcd_init(LCD_DISP_ON_BLINK);
 41a:	8d e0       	ldi	r24, 0x0D	; 13
 41c:	a1 df       	rcall	.-190    	; 0x360 <lcd_init>
	lcd_clrscr();
 41e:	70 df       	rcall	.-288    	; 0x300 <lcd_clrscr>
 420:	60 e0       	ldi	r22, 0x00	; 0
	lcd_gotoxy(0,0);
 422:	80 e0       	ldi	r24, 0x00	; 0
 424:	65 df       	rcall	.-310    	; 0x2f0 <lcd_gotoxy>
 426:	80 e0       	ldi	r24, 0x00	; 0
	lcd_puts("COUNTER_VALUE: ");
 428:	92 e0       	ldi	r25, 0x02	; 2
 42a:	8b df       	rcall	.-234    	; 0x342 <lcd_puts>
 42c:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <__data_end>
	dtostrf(counter, 2, 1, Output);// 
 430:	9e 01       	movw	r18, r28
 432:	2f 5f       	subi	r18, 0xFF	; 255
 434:	3f 4f       	sbci	r19, 0xFF	; 255
 436:	41 e0       	ldi	r20, 0x01	; 1
 438:	50 e0       	ldi	r21, 0x00	; 0
 43a:	62 e0       	ldi	r22, 0x02	; 2
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	1a d0       	rcall	.+52     	; 0x476 <dtostrf>
 442:	ce 01       	movw	r24, r28
	lcd_puts(Output);
 444:	01 96       	adiw	r24, 0x01	; 1
 446:	7d df       	rcall	.-262    	; 0x342 <lcd_puts>
 448:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <__data_end>
	PORTB=~counter;
 44c:	80 95       	com	r24
 44e:	85 b9       	out	0x05, r24	; 5
 450:	64 96       	adiw	r28, 0x14	; 20
 452:	0f b6       	in	r0, 0x3f	; 63
 454:	f8 94       	cli
 456:	de bf       	out	0x3e, r29	; 62
 458:	0f be       	out	0x3f, r0	; 63
 45a:	cd bf       	out	0x3d, r28	; 61
 45c:	df 91       	pop	r29
 45e:	cf 91       	pop	r28
 460:	08 95       	ret

00000462 <main>:
 462:	8f ef       	ldi	r24, 0xFF	; 255
 464:	84 b9       	out	0x04, r24	; 4
void program1(void);

int main(void)
{		
	DDRB =0xFF;
	EICRA = (1 <<ISC11) | (1 <<ISC10) | (1 << ISC00) | (1 << ISC01); // set INT0 and 1 rising edge
 466:	8f e0       	ldi	r24, 0x0F	; 15
 468:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x700069>
	EIMSK = (1 <<INT0)|(1<<INT1); // External Interrupt Enable INT0 and INT1
 46c:	83 e0       	ldi	r24, 0x03	; 3
 46e:	8d bb       	out	0x1d, r24	; 29
	sei(); //enable global interrupts
 470:	78 94       	sei
    while (1) 
    {
		program1();
 472:	c9 df       	rcall	.-110    	; 0x406 <program1>
 474:	fe cf       	rjmp	.-4      	; 0x472 <main+0x10>

00000476 <dtostrf>:
 476:	ef 92       	push	r14
 478:	0f 93       	push	r16
 47a:	1f 93       	push	r17
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	e8 01       	movw	r28, r16
 482:	47 fd       	sbrc	r20, 7
 484:	02 c0       	rjmp	.+4      	; 0x48a <dtostrf+0x14>
 486:	34 e0       	ldi	r19, 0x04	; 4
 488:	01 c0       	rjmp	.+2      	; 0x48c <dtostrf+0x16>
 48a:	34 e1       	ldi	r19, 0x14	; 20
 48c:	04 2e       	mov	r0, r20
 48e:	00 0c       	add	r0, r0
 490:	55 0b       	sbc	r21, r21
 492:	57 ff       	sbrs	r21, 7
 494:	03 c0       	rjmp	.+6      	; 0x49c <dtostrf+0x26>
 496:	51 95       	neg	r21
 498:	41 95       	neg	r20
 49a:	51 09       	sbc	r21, r1
 49c:	e3 2e       	mov	r14, r19
 49e:	02 2f       	mov	r16, r18
 4a0:	24 2f       	mov	r18, r20
 4a2:	ae 01       	movw	r20, r28
 4a4:	07 d0       	rcall	.+14     	; 0x4b4 <dtoa_prf>
 4a6:	ce 01       	movw	r24, r28
 4a8:	df 91       	pop	r29
 4aa:	cf 91       	pop	r28
 4ac:	1f 91       	pop	r17
 4ae:	0f 91       	pop	r16
 4b0:	ef 90       	pop	r14
 4b2:	08 95       	ret

000004b4 <dtoa_prf>:
 4b4:	8f 92       	push	r8
 4b6:	9f 92       	push	r9
 4b8:	af 92       	push	r10
 4ba:	bf 92       	push	r11
 4bc:	cf 92       	push	r12
 4be:	df 92       	push	r13
 4c0:	ef 92       	push	r14
 4c2:	ff 92       	push	r15
 4c4:	0f 93       	push	r16
 4c6:	1f 93       	push	r17
 4c8:	cf 93       	push	r28
 4ca:	df 93       	push	r29
 4cc:	cd b7       	in	r28, 0x3d	; 61
 4ce:	de b7       	in	r29, 0x3e	; 62
 4d0:	29 97       	sbiw	r28, 0x09	; 9
 4d2:	0f b6       	in	r0, 0x3f	; 63
 4d4:	f8 94       	cli
 4d6:	de bf       	out	0x3e, r29	; 62
 4d8:	0f be       	out	0x3f, r0	; 63
 4da:	cd bf       	out	0x3d, r28	; 61
 4dc:	6a 01       	movw	r12, r20
 4de:	12 2f       	mov	r17, r18
 4e0:	b0 2e       	mov	r11, r16
 4e2:	2b e3       	ldi	r18, 0x3B	; 59
 4e4:	20 17       	cp	r18, r16
 4e6:	20 f0       	brcs	.+8      	; 0x4f0 <dtoa_prf+0x3c>
 4e8:	ff 24       	eor	r15, r15
 4ea:	f3 94       	inc	r15
 4ec:	f0 0e       	add	r15, r16
 4ee:	02 c0       	rjmp	.+4      	; 0x4f4 <dtoa_prf+0x40>
 4f0:	2c e3       	ldi	r18, 0x3C	; 60
 4f2:	f2 2e       	mov	r15, r18
 4f4:	0f 2d       	mov	r16, r15
 4f6:	27 e0       	ldi	r18, 0x07	; 7
 4f8:	ae 01       	movw	r20, r28
 4fa:	4f 5f       	subi	r20, 0xFF	; 255
 4fc:	5f 4f       	sbci	r21, 0xFF	; 255
 4fe:	50 d1       	rcall	.+672    	; 0x7a0 <__ftoa_engine>
 500:	bc 01       	movw	r22, r24
 502:	49 81       	ldd	r20, Y+1	; 0x01
 504:	84 2f       	mov	r24, r20
 506:	89 70       	andi	r24, 0x09	; 9
 508:	81 30       	cpi	r24, 0x01	; 1
 50a:	31 f0       	breq	.+12     	; 0x518 <dtoa_prf+0x64>
 50c:	e1 fc       	sbrc	r14, 1
 50e:	06 c0       	rjmp	.+12     	; 0x51c <dtoa_prf+0x68>
 510:	e0 fe       	sbrs	r14, 0
 512:	06 c0       	rjmp	.+12     	; 0x520 <dtoa_prf+0x6c>
 514:	90 e2       	ldi	r25, 0x20	; 32
 516:	05 c0       	rjmp	.+10     	; 0x522 <dtoa_prf+0x6e>
 518:	9d e2       	ldi	r25, 0x2D	; 45
 51a:	03 c0       	rjmp	.+6      	; 0x522 <dtoa_prf+0x6e>
 51c:	9b e2       	ldi	r25, 0x2B	; 43
 51e:	01 c0       	rjmp	.+2      	; 0x522 <dtoa_prf+0x6e>
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	5e 2d       	mov	r21, r14
 524:	50 71       	andi	r21, 0x10	; 16
 526:	43 ff       	sbrs	r20, 3
 528:	3c c0       	rjmp	.+120    	; 0x5a2 <dtoa_prf+0xee>
 52a:	91 11       	cpse	r25, r1
 52c:	02 c0       	rjmp	.+4      	; 0x532 <dtoa_prf+0x7e>
 52e:	83 e0       	ldi	r24, 0x03	; 3
 530:	01 c0       	rjmp	.+2      	; 0x534 <dtoa_prf+0x80>
 532:	84 e0       	ldi	r24, 0x04	; 4
 534:	81 17       	cp	r24, r17
 536:	18 f4       	brcc	.+6      	; 0x53e <dtoa_prf+0x8a>
 538:	21 2f       	mov	r18, r17
 53a:	28 1b       	sub	r18, r24
 53c:	01 c0       	rjmp	.+2      	; 0x540 <dtoa_prf+0x8c>
 53e:	20 e0       	ldi	r18, 0x00	; 0
 540:	51 11       	cpse	r21, r1
 542:	0b c0       	rjmp	.+22     	; 0x55a <dtoa_prf+0xa6>
 544:	f6 01       	movw	r30, r12
 546:	82 2f       	mov	r24, r18
 548:	30 e2       	ldi	r19, 0x20	; 32
 54a:	88 23       	and	r24, r24
 54c:	19 f0       	breq	.+6      	; 0x554 <dtoa_prf+0xa0>
 54e:	31 93       	st	Z+, r19
 550:	81 50       	subi	r24, 0x01	; 1
 552:	fb cf       	rjmp	.-10     	; 0x54a <dtoa_prf+0x96>
 554:	c2 0e       	add	r12, r18
 556:	d1 1c       	adc	r13, r1
 558:	20 e0       	ldi	r18, 0x00	; 0
 55a:	99 23       	and	r25, r25
 55c:	29 f0       	breq	.+10     	; 0x568 <dtoa_prf+0xb4>
 55e:	d6 01       	movw	r26, r12
 560:	9c 93       	st	X, r25
 562:	f6 01       	movw	r30, r12
 564:	31 96       	adiw	r30, 0x01	; 1
 566:	6f 01       	movw	r12, r30
 568:	c6 01       	movw	r24, r12
 56a:	03 96       	adiw	r24, 0x03	; 3
 56c:	e2 fe       	sbrs	r14, 2
 56e:	0a c0       	rjmp	.+20     	; 0x584 <dtoa_prf+0xd0>
 570:	3e e4       	ldi	r19, 0x4E	; 78
 572:	d6 01       	movw	r26, r12
 574:	3c 93       	st	X, r19
 576:	41 e4       	ldi	r20, 0x41	; 65
 578:	11 96       	adiw	r26, 0x01	; 1
 57a:	4c 93       	st	X, r20
 57c:	11 97       	sbiw	r26, 0x01	; 1
 57e:	12 96       	adiw	r26, 0x02	; 2
 580:	3c 93       	st	X, r19
 582:	06 c0       	rjmp	.+12     	; 0x590 <dtoa_prf+0xdc>
 584:	3e e6       	ldi	r19, 0x6E	; 110
 586:	f6 01       	movw	r30, r12
 588:	30 83       	st	Z, r19
 58a:	41 e6       	ldi	r20, 0x61	; 97
 58c:	41 83       	std	Z+1, r20	; 0x01
 58e:	32 83       	std	Z+2, r19	; 0x02
 590:	fc 01       	movw	r30, r24
 592:	32 2f       	mov	r19, r18
 594:	40 e2       	ldi	r20, 0x20	; 32
 596:	33 23       	and	r19, r19
 598:	09 f4       	brne	.+2      	; 0x59c <dtoa_prf+0xe8>
 59a:	42 c0       	rjmp	.+132    	; 0x620 <dtoa_prf+0x16c>
 59c:	41 93       	st	Z+, r20
 59e:	31 50       	subi	r19, 0x01	; 1
 5a0:	fa cf       	rjmp	.-12     	; 0x596 <dtoa_prf+0xe2>
 5a2:	42 ff       	sbrs	r20, 2
 5a4:	44 c0       	rjmp	.+136    	; 0x62e <dtoa_prf+0x17a>
 5a6:	91 11       	cpse	r25, r1
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <dtoa_prf+0xfa>
 5aa:	83 e0       	ldi	r24, 0x03	; 3
 5ac:	01 c0       	rjmp	.+2      	; 0x5b0 <dtoa_prf+0xfc>
 5ae:	84 e0       	ldi	r24, 0x04	; 4
 5b0:	81 17       	cp	r24, r17
 5b2:	18 f4       	brcc	.+6      	; 0x5ba <dtoa_prf+0x106>
 5b4:	21 2f       	mov	r18, r17
 5b6:	28 1b       	sub	r18, r24
 5b8:	01 c0       	rjmp	.+2      	; 0x5bc <dtoa_prf+0x108>
 5ba:	20 e0       	ldi	r18, 0x00	; 0
 5bc:	51 11       	cpse	r21, r1
 5be:	0b c0       	rjmp	.+22     	; 0x5d6 <dtoa_prf+0x122>
 5c0:	f6 01       	movw	r30, r12
 5c2:	82 2f       	mov	r24, r18
 5c4:	30 e2       	ldi	r19, 0x20	; 32
 5c6:	88 23       	and	r24, r24
 5c8:	19 f0       	breq	.+6      	; 0x5d0 <dtoa_prf+0x11c>
 5ca:	31 93       	st	Z+, r19
 5cc:	81 50       	subi	r24, 0x01	; 1
 5ce:	fb cf       	rjmp	.-10     	; 0x5c6 <dtoa_prf+0x112>
 5d0:	c2 0e       	add	r12, r18
 5d2:	d1 1c       	adc	r13, r1
 5d4:	20 e0       	ldi	r18, 0x00	; 0
 5d6:	99 23       	and	r25, r25
 5d8:	29 f0       	breq	.+10     	; 0x5e4 <dtoa_prf+0x130>
 5da:	d6 01       	movw	r26, r12
 5dc:	9c 93       	st	X, r25
 5de:	f6 01       	movw	r30, r12
 5e0:	31 96       	adiw	r30, 0x01	; 1
 5e2:	6f 01       	movw	r12, r30
 5e4:	c6 01       	movw	r24, r12
 5e6:	03 96       	adiw	r24, 0x03	; 3
 5e8:	e2 fe       	sbrs	r14, 2
 5ea:	0b c0       	rjmp	.+22     	; 0x602 <dtoa_prf+0x14e>
 5ec:	39 e4       	ldi	r19, 0x49	; 73
 5ee:	d6 01       	movw	r26, r12
 5f0:	3c 93       	st	X, r19
 5f2:	3e e4       	ldi	r19, 0x4E	; 78
 5f4:	11 96       	adiw	r26, 0x01	; 1
 5f6:	3c 93       	st	X, r19
 5f8:	11 97       	sbiw	r26, 0x01	; 1
 5fa:	36 e4       	ldi	r19, 0x46	; 70
 5fc:	12 96       	adiw	r26, 0x02	; 2
 5fe:	3c 93       	st	X, r19
 600:	07 c0       	rjmp	.+14     	; 0x610 <dtoa_prf+0x15c>
 602:	39 e6       	ldi	r19, 0x69	; 105
 604:	f6 01       	movw	r30, r12
 606:	30 83       	st	Z, r19
 608:	3e e6       	ldi	r19, 0x6E	; 110
 60a:	31 83       	std	Z+1, r19	; 0x01
 60c:	36 e6       	ldi	r19, 0x66	; 102
 60e:	32 83       	std	Z+2, r19	; 0x02
 610:	fc 01       	movw	r30, r24
 612:	32 2f       	mov	r19, r18
 614:	40 e2       	ldi	r20, 0x20	; 32
 616:	33 23       	and	r19, r19
 618:	19 f0       	breq	.+6      	; 0x620 <dtoa_prf+0x16c>
 61a:	41 93       	st	Z+, r20
 61c:	31 50       	subi	r19, 0x01	; 1
 61e:	fb cf       	rjmp	.-10     	; 0x616 <dtoa_prf+0x162>
 620:	fc 01       	movw	r30, r24
 622:	e2 0f       	add	r30, r18
 624:	f1 1d       	adc	r31, r1
 626:	10 82       	st	Z, r1
 628:	8e ef       	ldi	r24, 0xFE	; 254
 62a:	9f ef       	ldi	r25, 0xFF	; 255
 62c:	a6 c0       	rjmp	.+332    	; 0x77a <dtoa_prf+0x2c6>
 62e:	21 e0       	ldi	r18, 0x01	; 1
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	91 11       	cpse	r25, r1
 634:	02 c0       	rjmp	.+4      	; 0x63a <dtoa_prf+0x186>
 636:	20 e0       	ldi	r18, 0x00	; 0
 638:	30 e0       	ldi	r19, 0x00	; 0
 63a:	16 16       	cp	r1, r22
 63c:	17 06       	cpc	r1, r23
 63e:	1c f4       	brge	.+6      	; 0x646 <dtoa_prf+0x192>
 640:	fb 01       	movw	r30, r22
 642:	31 96       	adiw	r30, 0x01	; 1
 644:	02 c0       	rjmp	.+4      	; 0x64a <dtoa_prf+0x196>
 646:	e1 e0       	ldi	r30, 0x01	; 1
 648:	f0 e0       	ldi	r31, 0x00	; 0
 64a:	2e 0f       	add	r18, r30
 64c:	3f 1f       	adc	r19, r31
 64e:	bb 20       	and	r11, r11
 650:	21 f0       	breq	.+8      	; 0x65a <dtoa_prf+0x1a6>
 652:	eb 2d       	mov	r30, r11
 654:	f0 e0       	ldi	r31, 0x00	; 0
 656:	31 96       	adiw	r30, 0x01	; 1
 658:	02 c0       	rjmp	.+4      	; 0x65e <dtoa_prf+0x1aa>
 65a:	e0 e0       	ldi	r30, 0x00	; 0
 65c:	f0 e0       	ldi	r31, 0x00	; 0
 65e:	2e 0f       	add	r18, r30
 660:	3f 1f       	adc	r19, r31
 662:	e1 2f       	mov	r30, r17
 664:	f0 e0       	ldi	r31, 0x00	; 0
 666:	2e 17       	cp	r18, r30
 668:	3f 07       	cpc	r19, r31
 66a:	1c f4       	brge	.+6      	; 0x672 <dtoa_prf+0x1be>
 66c:	12 1b       	sub	r17, r18
 66e:	21 2f       	mov	r18, r17
 670:	01 c0       	rjmp	.+2      	; 0x674 <dtoa_prf+0x1c0>
 672:	20 e0       	ldi	r18, 0x00	; 0
 674:	8e 2d       	mov	r24, r14
 676:	88 71       	andi	r24, 0x18	; 24
 678:	59 f4       	brne	.+22     	; 0x690 <dtoa_prf+0x1dc>
 67a:	f6 01       	movw	r30, r12
 67c:	82 2f       	mov	r24, r18
 67e:	30 e2       	ldi	r19, 0x20	; 32
 680:	88 23       	and	r24, r24
 682:	19 f0       	breq	.+6      	; 0x68a <dtoa_prf+0x1d6>
 684:	31 93       	st	Z+, r19
 686:	81 50       	subi	r24, 0x01	; 1
 688:	fb cf       	rjmp	.-10     	; 0x680 <dtoa_prf+0x1cc>
 68a:	c2 0e       	add	r12, r18
 68c:	d1 1c       	adc	r13, r1
 68e:	20 e0       	ldi	r18, 0x00	; 0
 690:	99 23       	and	r25, r25
 692:	29 f0       	breq	.+10     	; 0x69e <dtoa_prf+0x1ea>
 694:	d6 01       	movw	r26, r12
 696:	9c 93       	st	X, r25
 698:	f6 01       	movw	r30, r12
 69a:	31 96       	adiw	r30, 0x01	; 1
 69c:	6f 01       	movw	r12, r30
 69e:	51 11       	cpse	r21, r1
 6a0:	0b c0       	rjmp	.+22     	; 0x6b8 <dtoa_prf+0x204>
 6a2:	f6 01       	movw	r30, r12
 6a4:	82 2f       	mov	r24, r18
 6a6:	90 e3       	ldi	r25, 0x30	; 48
 6a8:	88 23       	and	r24, r24
 6aa:	19 f0       	breq	.+6      	; 0x6b2 <dtoa_prf+0x1fe>
 6ac:	91 93       	st	Z+, r25
 6ae:	81 50       	subi	r24, 0x01	; 1
 6b0:	fb cf       	rjmp	.-10     	; 0x6a8 <dtoa_prf+0x1f4>
 6b2:	c2 0e       	add	r12, r18
 6b4:	d1 1c       	adc	r13, r1
 6b6:	20 e0       	ldi	r18, 0x00	; 0
 6b8:	0f 2d       	mov	r16, r15
 6ba:	06 0f       	add	r16, r22
 6bc:	9a 81       	ldd	r25, Y+2	; 0x02
 6be:	34 2f       	mov	r19, r20
 6c0:	30 71       	andi	r19, 0x10	; 16
 6c2:	44 ff       	sbrs	r20, 4
 6c4:	03 c0       	rjmp	.+6      	; 0x6cc <dtoa_prf+0x218>
 6c6:	91 33       	cpi	r25, 0x31	; 49
 6c8:	09 f4       	brne	.+2      	; 0x6cc <dtoa_prf+0x218>
 6ca:	01 50       	subi	r16, 0x01	; 1
 6cc:	10 16       	cp	r1, r16
 6ce:	24 f4       	brge	.+8      	; 0x6d8 <dtoa_prf+0x224>
 6d0:	09 30       	cpi	r16, 0x09	; 9
 6d2:	18 f0       	brcs	.+6      	; 0x6da <dtoa_prf+0x226>
 6d4:	08 e0       	ldi	r16, 0x08	; 8
 6d6:	01 c0       	rjmp	.+2      	; 0x6da <dtoa_prf+0x226>
 6d8:	01 e0       	ldi	r16, 0x01	; 1
 6da:	ab 01       	movw	r20, r22
 6dc:	77 ff       	sbrs	r23, 7
 6de:	02 c0       	rjmp	.+4      	; 0x6e4 <dtoa_prf+0x230>
 6e0:	40 e0       	ldi	r20, 0x00	; 0
 6e2:	50 e0       	ldi	r21, 0x00	; 0
 6e4:	fb 01       	movw	r30, r22
 6e6:	e4 1b       	sub	r30, r20
 6e8:	f5 0b       	sbc	r31, r21
 6ea:	a1 e0       	ldi	r26, 0x01	; 1
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	ac 0f       	add	r26, r28
 6f0:	bd 1f       	adc	r27, r29
 6f2:	ea 0f       	add	r30, r26
 6f4:	fb 1f       	adc	r31, r27
 6f6:	8e e2       	ldi	r24, 0x2E	; 46
 6f8:	a8 2e       	mov	r10, r24
 6fa:	4b 01       	movw	r8, r22
 6fc:	80 1a       	sub	r8, r16
 6fe:	91 08       	sbc	r9, r1
 700:	0b 2d       	mov	r16, r11
 702:	10 e0       	ldi	r17, 0x00	; 0
 704:	11 95       	neg	r17
 706:	01 95       	neg	r16
 708:	11 09       	sbc	r17, r1
 70a:	4f 3f       	cpi	r20, 0xFF	; 255
 70c:	bf ef       	ldi	r27, 0xFF	; 255
 70e:	5b 07       	cpc	r21, r27
 710:	21 f4       	brne	.+8      	; 0x71a <dtoa_prf+0x266>
 712:	d6 01       	movw	r26, r12
 714:	ac 92       	st	X, r10
 716:	11 96       	adiw	r26, 0x01	; 1
 718:	6d 01       	movw	r12, r26
 71a:	64 17       	cp	r22, r20
 71c:	75 07       	cpc	r23, r21
 71e:	2c f0       	brlt	.+10     	; 0x72a <dtoa_prf+0x276>
 720:	84 16       	cp	r8, r20
 722:	95 06       	cpc	r9, r21
 724:	14 f4       	brge	.+4      	; 0x72a <dtoa_prf+0x276>
 726:	81 81       	ldd	r24, Z+1	; 0x01
 728:	01 c0       	rjmp	.+2      	; 0x72c <dtoa_prf+0x278>
 72a:	80 e3       	ldi	r24, 0x30	; 48
 72c:	41 50       	subi	r20, 0x01	; 1
 72e:	51 09       	sbc	r21, r1
 730:	31 96       	adiw	r30, 0x01	; 1
 732:	d6 01       	movw	r26, r12
 734:	11 96       	adiw	r26, 0x01	; 1
 736:	7d 01       	movw	r14, r26
 738:	40 17       	cp	r20, r16
 73a:	51 07       	cpc	r21, r17
 73c:	24 f0       	brlt	.+8      	; 0x746 <dtoa_prf+0x292>
 73e:	d6 01       	movw	r26, r12
 740:	8c 93       	st	X, r24
 742:	67 01       	movw	r12, r14
 744:	e2 cf       	rjmp	.-60     	; 0x70a <dtoa_prf+0x256>
 746:	64 17       	cp	r22, r20
 748:	75 07       	cpc	r23, r21
 74a:	39 f4       	brne	.+14     	; 0x75a <dtoa_prf+0x2a6>
 74c:	96 33       	cpi	r25, 0x36	; 54
 74e:	20 f4       	brcc	.+8      	; 0x758 <dtoa_prf+0x2a4>
 750:	95 33       	cpi	r25, 0x35	; 53
 752:	19 f4       	brne	.+6      	; 0x75a <dtoa_prf+0x2a6>
 754:	31 11       	cpse	r19, r1
 756:	01 c0       	rjmp	.+2      	; 0x75a <dtoa_prf+0x2a6>
 758:	81 e3       	ldi	r24, 0x31	; 49
 75a:	f6 01       	movw	r30, r12
 75c:	80 83       	st	Z, r24
 75e:	f7 01       	movw	r30, r14
 760:	82 2f       	mov	r24, r18
 762:	90 e2       	ldi	r25, 0x20	; 32
 764:	88 23       	and	r24, r24
 766:	19 f0       	breq	.+6      	; 0x76e <dtoa_prf+0x2ba>
 768:	91 93       	st	Z+, r25
 76a:	81 50       	subi	r24, 0x01	; 1
 76c:	fb cf       	rjmp	.-10     	; 0x764 <dtoa_prf+0x2b0>
 76e:	f7 01       	movw	r30, r14
 770:	e2 0f       	add	r30, r18
 772:	f1 1d       	adc	r31, r1
 774:	10 82       	st	Z, r1
 776:	80 e0       	ldi	r24, 0x00	; 0
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	29 96       	adiw	r28, 0x09	; 9
 77c:	0f b6       	in	r0, 0x3f	; 63
 77e:	f8 94       	cli
 780:	de bf       	out	0x3e, r29	; 62
 782:	0f be       	out	0x3f, r0	; 63
 784:	cd bf       	out	0x3d, r28	; 61
 786:	df 91       	pop	r29
 788:	cf 91       	pop	r28
 78a:	1f 91       	pop	r17
 78c:	0f 91       	pop	r16
 78e:	ff 90       	pop	r15
 790:	ef 90       	pop	r14
 792:	df 90       	pop	r13
 794:	cf 90       	pop	r12
 796:	bf 90       	pop	r11
 798:	af 90       	pop	r10
 79a:	9f 90       	pop	r9
 79c:	8f 90       	pop	r8
 79e:	08 95       	ret

000007a0 <__ftoa_engine>:
 7a0:	28 30       	cpi	r18, 0x08	; 8
 7a2:	08 f0       	brcs	.+2      	; 0x7a6 <__ftoa_engine+0x6>
 7a4:	27 e0       	ldi	r18, 0x07	; 7
 7a6:	33 27       	eor	r19, r19
 7a8:	da 01       	movw	r26, r20
 7aa:	99 0f       	add	r25, r25
 7ac:	31 1d       	adc	r19, r1
 7ae:	87 fd       	sbrc	r24, 7
 7b0:	91 60       	ori	r25, 0x01	; 1
 7b2:	00 96       	adiw	r24, 0x00	; 0
 7b4:	61 05       	cpc	r22, r1
 7b6:	71 05       	cpc	r23, r1
 7b8:	39 f4       	brne	.+14     	; 0x7c8 <__ftoa_engine+0x28>
 7ba:	32 60       	ori	r19, 0x02	; 2
 7bc:	2e 5f       	subi	r18, 0xFE	; 254
 7be:	3d 93       	st	X+, r19
 7c0:	30 e3       	ldi	r19, 0x30	; 48
 7c2:	2a 95       	dec	r18
 7c4:	e1 f7       	brne	.-8      	; 0x7be <__ftoa_engine+0x1e>
 7c6:	08 95       	ret
 7c8:	9f 3f       	cpi	r25, 0xFF	; 255
 7ca:	30 f0       	brcs	.+12     	; 0x7d8 <__ftoa_engine+0x38>
 7cc:	80 38       	cpi	r24, 0x80	; 128
 7ce:	71 05       	cpc	r23, r1
 7d0:	61 05       	cpc	r22, r1
 7d2:	09 f0       	breq	.+2      	; 0x7d6 <__ftoa_engine+0x36>
 7d4:	3c 5f       	subi	r19, 0xFC	; 252
 7d6:	3c 5f       	subi	r19, 0xFC	; 252
 7d8:	3d 93       	st	X+, r19
 7da:	91 30       	cpi	r25, 0x01	; 1
 7dc:	08 f0       	brcs	.+2      	; 0x7e0 <__ftoa_engine+0x40>
 7de:	80 68       	ori	r24, 0x80	; 128
 7e0:	91 1d       	adc	r25, r1
 7e2:	df 93       	push	r29
 7e4:	cf 93       	push	r28
 7e6:	1f 93       	push	r17
 7e8:	0f 93       	push	r16
 7ea:	ff 92       	push	r15
 7ec:	ef 92       	push	r14
 7ee:	19 2f       	mov	r17, r25
 7f0:	98 7f       	andi	r25, 0xF8	; 248
 7f2:	96 95       	lsr	r25
 7f4:	e9 2f       	mov	r30, r25
 7f6:	96 95       	lsr	r25
 7f8:	96 95       	lsr	r25
 7fa:	e9 0f       	add	r30, r25
 7fc:	ff 27       	eor	r31, r31
 7fe:	e2 5c       	subi	r30, 0xC2	; 194
 800:	fe 4f       	sbci	r31, 0xFE	; 254
 802:	99 27       	eor	r25, r25
 804:	33 27       	eor	r19, r19
 806:	ee 24       	eor	r14, r14
 808:	ff 24       	eor	r15, r15
 80a:	a7 01       	movw	r20, r14
 80c:	e7 01       	movw	r28, r14
 80e:	05 90       	lpm	r0, Z+
 810:	08 94       	sec
 812:	07 94       	ror	r0
 814:	28 f4       	brcc	.+10     	; 0x820 <__ftoa_engine+0x80>
 816:	36 0f       	add	r19, r22
 818:	e7 1e       	adc	r14, r23
 81a:	f8 1e       	adc	r15, r24
 81c:	49 1f       	adc	r20, r25
 81e:	51 1d       	adc	r21, r1
 820:	66 0f       	add	r22, r22
 822:	77 1f       	adc	r23, r23
 824:	88 1f       	adc	r24, r24
 826:	99 1f       	adc	r25, r25
 828:	06 94       	lsr	r0
 82a:	a1 f7       	brne	.-24     	; 0x814 <__ftoa_engine+0x74>
 82c:	05 90       	lpm	r0, Z+
 82e:	07 94       	ror	r0
 830:	28 f4       	brcc	.+10     	; 0x83c <__ftoa_engine+0x9c>
 832:	e7 0e       	add	r14, r23
 834:	f8 1e       	adc	r15, r24
 836:	49 1f       	adc	r20, r25
 838:	56 1f       	adc	r21, r22
 83a:	c1 1d       	adc	r28, r1
 83c:	77 0f       	add	r23, r23
 83e:	88 1f       	adc	r24, r24
 840:	99 1f       	adc	r25, r25
 842:	66 1f       	adc	r22, r22
 844:	06 94       	lsr	r0
 846:	a1 f7       	brne	.-24     	; 0x830 <__ftoa_engine+0x90>
 848:	05 90       	lpm	r0, Z+
 84a:	07 94       	ror	r0
 84c:	28 f4       	brcc	.+10     	; 0x858 <__ftoa_engine+0xb8>
 84e:	f8 0e       	add	r15, r24
 850:	49 1f       	adc	r20, r25
 852:	56 1f       	adc	r21, r22
 854:	c7 1f       	adc	r28, r23
 856:	d1 1d       	adc	r29, r1
 858:	88 0f       	add	r24, r24
 85a:	99 1f       	adc	r25, r25
 85c:	66 1f       	adc	r22, r22
 85e:	77 1f       	adc	r23, r23
 860:	06 94       	lsr	r0
 862:	a1 f7       	brne	.-24     	; 0x84c <__ftoa_engine+0xac>
 864:	05 90       	lpm	r0, Z+
 866:	07 94       	ror	r0
 868:	20 f4       	brcc	.+8      	; 0x872 <__ftoa_engine+0xd2>
 86a:	49 0f       	add	r20, r25
 86c:	56 1f       	adc	r21, r22
 86e:	c7 1f       	adc	r28, r23
 870:	d8 1f       	adc	r29, r24
 872:	99 0f       	add	r25, r25
 874:	66 1f       	adc	r22, r22
 876:	77 1f       	adc	r23, r23
 878:	88 1f       	adc	r24, r24
 87a:	06 94       	lsr	r0
 87c:	a9 f7       	brne	.-22     	; 0x868 <__ftoa_engine+0xc8>
 87e:	84 91       	lpm	r24, Z
 880:	10 95       	com	r17
 882:	17 70       	andi	r17, 0x07	; 7
 884:	41 f0       	breq	.+16     	; 0x896 <__ftoa_engine+0xf6>
 886:	d6 95       	lsr	r29
 888:	c7 95       	ror	r28
 88a:	57 95       	ror	r21
 88c:	47 95       	ror	r20
 88e:	f7 94       	ror	r15
 890:	e7 94       	ror	r14
 892:	1a 95       	dec	r17
 894:	c1 f7       	brne	.-16     	; 0x886 <__ftoa_engine+0xe6>
 896:	e4 ee       	ldi	r30, 0xE4	; 228
 898:	f0 e0       	ldi	r31, 0x00	; 0
 89a:	68 94       	set
 89c:	15 90       	lpm	r1, Z+
 89e:	15 91       	lpm	r17, Z+
 8a0:	35 91       	lpm	r19, Z+
 8a2:	65 91       	lpm	r22, Z+
 8a4:	95 91       	lpm	r25, Z+
 8a6:	05 90       	lpm	r0, Z+
 8a8:	7f e2       	ldi	r23, 0x2F	; 47
 8aa:	73 95       	inc	r23
 8ac:	e1 18       	sub	r14, r1
 8ae:	f1 0a       	sbc	r15, r17
 8b0:	43 0b       	sbc	r20, r19
 8b2:	56 0b       	sbc	r21, r22
 8b4:	c9 0b       	sbc	r28, r25
 8b6:	d0 09       	sbc	r29, r0
 8b8:	c0 f7       	brcc	.-16     	; 0x8aa <__ftoa_engine+0x10a>
 8ba:	e1 0c       	add	r14, r1
 8bc:	f1 1e       	adc	r15, r17
 8be:	43 1f       	adc	r20, r19
 8c0:	56 1f       	adc	r21, r22
 8c2:	c9 1f       	adc	r28, r25
 8c4:	d0 1d       	adc	r29, r0
 8c6:	7e f4       	brtc	.+30     	; 0x8e6 <__ftoa_engine+0x146>
 8c8:	70 33       	cpi	r23, 0x30	; 48
 8ca:	11 f4       	brne	.+4      	; 0x8d0 <__ftoa_engine+0x130>
 8cc:	8a 95       	dec	r24
 8ce:	e6 cf       	rjmp	.-52     	; 0x89c <__ftoa_engine+0xfc>
 8d0:	e8 94       	clt
 8d2:	01 50       	subi	r16, 0x01	; 1
 8d4:	30 f0       	brcs	.+12     	; 0x8e2 <__ftoa_engine+0x142>
 8d6:	08 0f       	add	r16, r24
 8d8:	0a f4       	brpl	.+2      	; 0x8dc <__ftoa_engine+0x13c>
 8da:	00 27       	eor	r16, r16
 8dc:	02 17       	cp	r16, r18
 8de:	08 f4       	brcc	.+2      	; 0x8e2 <__ftoa_engine+0x142>
 8e0:	20 2f       	mov	r18, r16
 8e2:	23 95       	inc	r18
 8e4:	02 2f       	mov	r16, r18
 8e6:	7a 33       	cpi	r23, 0x3A	; 58
 8e8:	28 f0       	brcs	.+10     	; 0x8f4 <__ftoa_engine+0x154>
 8ea:	79 e3       	ldi	r23, 0x39	; 57
 8ec:	7d 93       	st	X+, r23
 8ee:	2a 95       	dec	r18
 8f0:	e9 f7       	brne	.-6      	; 0x8ec <__ftoa_engine+0x14c>
 8f2:	10 c0       	rjmp	.+32     	; 0x914 <__ftoa_engine+0x174>
 8f4:	7d 93       	st	X+, r23
 8f6:	2a 95       	dec	r18
 8f8:	89 f6       	brne	.-94     	; 0x89c <__ftoa_engine+0xfc>
 8fa:	06 94       	lsr	r0
 8fc:	97 95       	ror	r25
 8fe:	67 95       	ror	r22
 900:	37 95       	ror	r19
 902:	17 95       	ror	r17
 904:	17 94       	ror	r1
 906:	e1 18       	sub	r14, r1
 908:	f1 0a       	sbc	r15, r17
 90a:	43 0b       	sbc	r20, r19
 90c:	56 0b       	sbc	r21, r22
 90e:	c9 0b       	sbc	r28, r25
 910:	d0 09       	sbc	r29, r0
 912:	98 f0       	brcs	.+38     	; 0x93a <__ftoa_engine+0x19a>
 914:	23 95       	inc	r18
 916:	7e 91       	ld	r23, -X
 918:	73 95       	inc	r23
 91a:	7a 33       	cpi	r23, 0x3A	; 58
 91c:	08 f0       	brcs	.+2      	; 0x920 <__ftoa_engine+0x180>
 91e:	70 e3       	ldi	r23, 0x30	; 48
 920:	7c 93       	st	X, r23
 922:	20 13       	cpse	r18, r16
 924:	b8 f7       	brcc	.-18     	; 0x914 <__ftoa_engine+0x174>
 926:	7e 91       	ld	r23, -X
 928:	70 61       	ori	r23, 0x10	; 16
 92a:	7d 93       	st	X+, r23
 92c:	30 f0       	brcs	.+12     	; 0x93a <__ftoa_engine+0x19a>
 92e:	83 95       	inc	r24
 930:	71 e3       	ldi	r23, 0x31	; 49
 932:	7d 93       	st	X+, r23
 934:	70 e3       	ldi	r23, 0x30	; 48
 936:	2a 95       	dec	r18
 938:	e1 f7       	brne	.-8      	; 0x932 <__ftoa_engine+0x192>
 93a:	11 24       	eor	r1, r1
 93c:	ef 90       	pop	r14
 93e:	ff 90       	pop	r15
 940:	0f 91       	pop	r16
 942:	1f 91       	pop	r17
 944:	cf 91       	pop	r28
 946:	df 91       	pop	r29
 948:	99 27       	eor	r25, r25
 94a:	87 fd       	sbrc	r24, 7
 94c:	90 95       	com	r25
 94e:	08 95       	ret

00000950 <_exit>:
 950:	f8 94       	cli

00000952 <__stop_program>:
 952:	ff cf       	rjmp	.-2      	; 0x952 <__stop_program>
