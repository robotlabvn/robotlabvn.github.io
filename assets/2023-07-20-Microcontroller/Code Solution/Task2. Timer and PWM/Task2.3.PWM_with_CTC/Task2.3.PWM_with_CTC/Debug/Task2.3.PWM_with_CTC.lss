
Task2.3.PWM_with_CTC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00000244  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800200  00800200  00000244  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000244  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000274  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000002b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c6f  00000000  00000000  000002dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b9c  00000000  00000000  00000f4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000151  00000000  00000000  00001ae7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000050  00000000  00000000  00001c38  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005af  00000000  00000000  00001c88  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000056  00000000  00000000  00002237  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  0000228d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	81 c0       	rjmp	.+258    	; 0x108 <__bad_interrupt>
   6:	00 00       	nop
   8:	7f c0       	rjmp	.+254    	; 0x108 <__bad_interrupt>
   a:	00 00       	nop
   c:	7d c0       	rjmp	.+250    	; 0x108 <__bad_interrupt>
   e:	00 00       	nop
  10:	7b c0       	rjmp	.+246    	; 0x108 <__bad_interrupt>
  12:	00 00       	nop
  14:	79 c0       	rjmp	.+242    	; 0x108 <__bad_interrupt>
  16:	00 00       	nop
  18:	77 c0       	rjmp	.+238    	; 0x108 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	75 c0       	rjmp	.+234    	; 0x108 <__bad_interrupt>
  1e:	00 00       	nop
  20:	73 c0       	rjmp	.+230    	; 0x108 <__bad_interrupt>
  22:	00 00       	nop
  24:	71 c0       	rjmp	.+226    	; 0x108 <__bad_interrupt>
  26:	00 00       	nop
  28:	6f c0       	rjmp	.+222    	; 0x108 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	6d c0       	rjmp	.+218    	; 0x108 <__bad_interrupt>
  2e:	00 00       	nop
  30:	6b c0       	rjmp	.+214    	; 0x108 <__bad_interrupt>
  32:	00 00       	nop
  34:	69 c0       	rjmp	.+210    	; 0x108 <__bad_interrupt>
  36:	00 00       	nop
  38:	67 c0       	rjmp	.+206    	; 0x108 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	65 c0       	rjmp	.+202    	; 0x108 <__bad_interrupt>
  3e:	00 00       	nop
  40:	63 c0       	rjmp	.+198    	; 0x108 <__bad_interrupt>
  42:	00 00       	nop
  44:	7f c0       	rjmp	.+254    	; 0x144 <__vector_17>
  46:	00 00       	nop
  48:	5f c0       	rjmp	.+190    	; 0x108 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	5d c0       	rjmp	.+186    	; 0x108 <__bad_interrupt>
  4e:	00 00       	nop
  50:	5b c0       	rjmp	.+182    	; 0x108 <__bad_interrupt>
  52:	00 00       	nop
  54:	59 c0       	rjmp	.+178    	; 0x108 <__bad_interrupt>
  56:	00 00       	nop
  58:	57 c0       	rjmp	.+174    	; 0x108 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	55 c0       	rjmp	.+170    	; 0x108 <__bad_interrupt>
  5e:	00 00       	nop
  60:	53 c0       	rjmp	.+166    	; 0x108 <__bad_interrupt>
  62:	00 00       	nop
  64:	51 c0       	rjmp	.+162    	; 0x108 <__bad_interrupt>
  66:	00 00       	nop
  68:	4f c0       	rjmp	.+158    	; 0x108 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	4d c0       	rjmp	.+154    	; 0x108 <__bad_interrupt>
  6e:	00 00       	nop
  70:	4b c0       	rjmp	.+150    	; 0x108 <__bad_interrupt>
  72:	00 00       	nop
  74:	49 c0       	rjmp	.+146    	; 0x108 <__bad_interrupt>
  76:	00 00       	nop
  78:	47 c0       	rjmp	.+142    	; 0x108 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	45 c0       	rjmp	.+138    	; 0x108 <__bad_interrupt>
  7e:	00 00       	nop
  80:	43 c0       	rjmp	.+134    	; 0x108 <__bad_interrupt>
  82:	00 00       	nop
  84:	41 c0       	rjmp	.+130    	; 0x108 <__bad_interrupt>
  86:	00 00       	nop
  88:	3f c0       	rjmp	.+126    	; 0x108 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	3d c0       	rjmp	.+122    	; 0x108 <__bad_interrupt>
  8e:	00 00       	nop
  90:	3b c0       	rjmp	.+118    	; 0x108 <__bad_interrupt>
  92:	00 00       	nop
  94:	39 c0       	rjmp	.+114    	; 0x108 <__bad_interrupt>
  96:	00 00       	nop
  98:	37 c0       	rjmp	.+110    	; 0x108 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	35 c0       	rjmp	.+106    	; 0x108 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	33 c0       	rjmp	.+102    	; 0x108 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	31 c0       	rjmp	.+98     	; 0x108 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	2f c0       	rjmp	.+94     	; 0x108 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	2d c0       	rjmp	.+90     	; 0x108 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	2b c0       	rjmp	.+86     	; 0x108 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	29 c0       	rjmp	.+82     	; 0x108 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	27 c0       	rjmp	.+78     	; 0x108 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	25 c0       	rjmp	.+74     	; 0x108 <__bad_interrupt>
  be:	00 00       	nop
  c0:	23 c0       	rjmp	.+70     	; 0x108 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	21 c0       	rjmp	.+66     	; 0x108 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	1f c0       	rjmp	.+62     	; 0x108 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	1d c0       	rjmp	.+58     	; 0x108 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	1b c0       	rjmp	.+54     	; 0x108 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	19 c0       	rjmp	.+50     	; 0x108 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	17 c0       	rjmp	.+46     	; 0x108 <__bad_interrupt>
  da:	00 00       	nop
  dc:	15 c0       	rjmp	.+42     	; 0x108 <__bad_interrupt>
  de:	00 00       	nop
  e0:	13 c0       	rjmp	.+38     	; 0x108 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_clear_bss>:
  f4:	22 e0       	ldi	r18, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	01 c0       	rjmp	.+2      	; 0xfe <.do_clear_bss_start>

000000fc <.do_clear_bss_loop>:
  fc:	1d 92       	st	X+, r1

000000fe <.do_clear_bss_start>:
  fe:	a1 30       	cpi	r26, 0x01	; 1
 100:	b2 07       	cpc	r27, r18
 102:	e1 f7       	brne	.-8      	; 0xfc <.do_clear_bss_loop>
 104:	02 d0       	rcall	.+4      	; 0x10a <main>
 106:	62 c0       	rjmp	.+196    	; 0x1cc <_exit>

00000108 <__bad_interrupt>:
 108:	7b cf       	rjmp	.-266    	; 0x0 <__vectors>

0000010a <main>:
	Hardware configuration:
	PORT B = Switcher
	PORT D = PIN5 =PWM
	*************************/
	
	DDRD |= (1<<PIND5); //PD5 config PD5 Output to Servo
 10a:	55 9a       	sbi	0x0a, 5	; 10
	
	TCCR1B |= (1<<WGM12)  | (1<<CS11) | (1<<CS10); // WGW12  (Mode 4) , CS11 and CS10 = Prescaler 64.
 10c:	e1 e8       	ldi	r30, 0x81	; 129
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	8b 60       	ori	r24, 0x0B	; 11
 114:	80 83       	st	Z, r24
	TIMSK1 |= (1<<OCIE1A); // Timer 1 Output Compare Match Interrupt Enable
 116:	ef e6       	ldi	r30, 0x6F	; 111
 118:	f0 e0       	ldi	r31, 0x00	; 0
 11a:	80 81       	ld	r24, Z
 11c:	82 60       	ori	r24, 0x02	; 2
 11e:	80 83       	st	Z, r24
	At duty cycle of 7.5%:
	2500 * 0.925 = 2313 = 0x909 LOW
	2500 * 0.075 = 187 = 0xBB HIGH
	
	***********************/
	OCR1A = 0x947; // Start value for the period
 120:	87 e4       	ldi	r24, 0x47	; 71
 122:	99 e0       	ldi	r25, 0x09	; 9
 124:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 128:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
	sei(); // Enable Global Interrupts
 12c:	78 94       	sei
	
	while(1)
	{
		if (!(PINB & (1<<PINB0))) //If button SW0 has been pressed, the variable set to mode 7.5%
		{
				duty= DUTY_7_5_PERCENT;
 12e:	81 e0       	ldi	r24, 0x01	; 1
	sei(); // Enable Global Interrupts

	
	while(1)
	{
		if (!(PINB & (1<<PINB0))) //If button SW0 has been pressed, the variable set to mode 7.5%
 130:	18 99       	sbic	0x03, 0	; 3
 132:	03 c0       	rjmp	.+6      	; 0x13a <main+0x30>
		{
				duty= DUTY_7_5_PERCENT;
 134:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
 138:	fb cf       	rjmp	.-10     	; 0x130 <main+0x26>
		}
		else if (!(PINB & (1<<PINB1)))
 13a:	19 99       	sbic	0x03, 1	; 3
 13c:	f9 cf       	rjmp	.-14     	; 0x130 <main+0x26>
		{
			duty = DUTY_5_PERCENT;
 13e:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <_edata>
 142:	f6 cf       	rjmp	.-20     	; 0x130 <main+0x26>

00000144 <__vector_17>:
}

/*******************************
Timer 1 Compare Interrupt triggered when the counter reaches the value OCR1A
*******************************/
ISR(TIMER1_COMPA_vect){ 
 144:	1f 92       	push	r1
 146:	0f 92       	push	r0
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	0f 92       	push	r0
 14c:	11 24       	eor	r1, r1
 14e:	2f 93       	push	r18
 150:	8f 93       	push	r24
 152:	9f 93       	push	r25
	
	if (duty == DUTY_5_PERCENT)  // if the duty cycle set 5% 
 154:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <_edata>
 158:	81 11       	cpse	r24, r1
 15a:	17 c0       	rjmp	.+46     	; 0x18a <__vector_17+0x46>
	{
		if (OCR1A == 0x947)     // If the overflow level was LOW
 15c:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 160:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 164:	87 34       	cpi	r24, 0x47	; 71
 166:	99 40       	sbci	r25, 0x09	; 9
 168:	41 f4       	brne	.+16     	; 0x17a <__vector_17+0x36>
		{
			PORTD |= (1<< PIND5);  //Set Pin PD5 to HIGH
 16a:	5d 9a       	sbi	0x0b, 5	; 11
			OCR1A = 0x7D;        // set OCR1A to next value to HIGH
 16c:	8d e7       	ldi	r24, 0x7D	; 125
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 174:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 178:	21 c0       	rjmp	.+66     	; 0x1bc <__vector_17+0x78>
		}
		else {
			PORTD &= ~(1<<PIND5); // Set Pin 
 17a:	5d 98       	cbi	0x0b, 5	; 11
			OCR1A = 0x947;
 17c:	87 e4       	ldi	r24, 0x47	; 71
 17e:	99 e0       	ldi	r25, 0x09	; 9
 180:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 184:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 188:	19 c0       	rjmp	.+50     	; 0x1bc <__vector_17+0x78>
		}
	}
	else if (duty = DUTY_7_5_PERCENT)
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <_edata>
	{
		if (OCR1A == 0x909 )
 190:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 194:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 198:	89 30       	cpi	r24, 0x09	; 9
 19a:	99 40       	sbci	r25, 0x09	; 9
 19c:	41 f4       	brne	.+16     	; 0x1ae <__vector_17+0x6a>
		{
			PORTD |= (1<<PIND5);
 19e:	5d 9a       	sbi	0x0b, 5	; 11
			OCR1A = 0xBB;
 1a0:	8b eb       	ldi	r24, 0xBB	; 187
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 1a8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
 1ac:	07 c0       	rjmp	.+14     	; 0x1bc <__vector_17+0x78>
		}
		else{
			PORTD &= ~(1<<PIND5);
 1ae:	5d 98       	cbi	0x0b, 5	; 11
			OCR1A = 0x909;
 1b0:	89 e0       	ldi	r24, 0x09	; 9
 1b2:	99 e0       	ldi	r25, 0x09	; 9
 1b4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
 1b8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
		}
	}
}
 1bc:	9f 91       	pop	r25
 1be:	8f 91       	pop	r24
 1c0:	2f 91       	pop	r18
 1c2:	0f 90       	pop	r0
 1c4:	0f be       	out	0x3f, r0	; 63
 1c6:	0f 90       	pop	r0
 1c8:	1f 90       	pop	r1
 1ca:	18 95       	reti

000001cc <_exit>:
 1cc:	f8 94       	cli

000001ce <__stop_program>:
 1ce:	ff cf       	rjmp	.-2      	; 0x1ce <__stop_program>
